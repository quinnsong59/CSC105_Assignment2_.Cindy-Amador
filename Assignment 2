{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"16B3v5jPfzkpwVDBhY3hJBNu8Z4mOPQAv","timestamp":1694811691448}],"authorship_tag":"ABX9TyM9XRuntsmrU3tum9vPbT6r"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"V0stnPR6TBQg"},"outputs":[],"source":["import pandas as pd"]},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/drive')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6h6k_yePTKNj","executionInfo":{"status":"ok","timestamp":1694812843951,"user_tz":240,"elapsed":20286,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"d5fad94c-5ee7-4673-d52b-ec3540ba9f71"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}]},{"cell_type":"code","source":["df=pd.read_csv(\"drive/My Drive/Colab Notebooks/data/Motor_Vehicle_Collisions_-_Crashes.csv\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VQhfMQkBTm-0","executionInfo":{"status":"ok","timestamp":1694812859171,"user_tz":240,"elapsed":15238,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"14d91137-5755-400a-a2a1-ee292ddf53f6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-4-90c2f99001f2>:1: DtypeWarning: Columns (3) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df=pd.read_csv(\"drive/My Drive/Colab Notebooks/data/Motor_Vehicle_Collisions_-_Crashes.csv\")\n"]}]},{"cell_type":"code","source":["df.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"b5tvTaSBT0co","executionInfo":{"status":"ok","timestamp":1694812859174,"user_tz":240,"elapsed":27,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"42fcf0a5-b2f3-45f4-fe16-cec2d48c3aa9"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(2018963, 29)"]},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["df.head"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YUrmifRLT8N-","executionInfo":{"status":"ok","timestamp":1694812859932,"user_tz":240,"elapsed":777,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"75b7b580-331d-4fb5-eb4d-c605584c9c11"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.head of          CRASH DATE CRASH TIME    BOROUGH ZIP CODE   LATITUDE  LONGITUDE  \\\n","0        09/11/2021       2:39        NaN      NaN        NaN        NaN   \n","1        03/26/2022      11:45        NaN      NaN        NaN        NaN   \n","2        06/29/2022       6:55        NaN      NaN        NaN        NaN   \n","3        09/11/2021       9:35   BROOKLYN  11208.0  40.667202 -73.866500   \n","4        12/14/2021       8:13   BROOKLYN  11233.0  40.683304 -73.917274   \n","...             ...        ...        ...      ...        ...        ...   \n","2018958  07/03/2023      18:05        NaN      NaN  40.866806 -73.931010   \n","2018959  07/22/2023      21:39      BRONX  10457.0  40.844177 -73.902920   \n","2018960  07/02/2023      17:55  MANHATTAN  10006.0  40.711033 -74.014540   \n","2018961  07/22/2023      13:15     QUEENS  11433.0  40.691580 -73.793190   \n","2018962  07/22/2023       3:00     QUEENS  11433.0  40.700240 -73.792854   \n","\n","                        LOCATION           ON STREET NAME CROSS STREET NAME  \\\n","0                            NaN    WHITESTONE EXPRESSWAY         20 AVENUE   \n","1                            NaN  QUEENSBORO BRIDGE UPPER               NaN   \n","2                            NaN       THROGS NECK BRIDGE               NaN   \n","3          (40.667202, -73.8665)                      NaN               NaN   \n","4        (40.683304, -73.917274)          SARATOGA AVENUE    DECATUR STREET   \n","...                          ...                      ...               ...   \n","2018958   (40.866806, -73.93101)          RIVERSIDE DRIVE               NaN   \n","2018959   (40.844177, -73.90292)          EAST 174 STREET    WEBSTER AVENUE   \n","2018960   (40.711033, -74.01454)              WEST STREET    LIBERTY STREET   \n","2018961    (40.69158, -73.79319)               110 AVENUE        157 STREET   \n","2018962   (40.70024, -73.792854)               SOUTH ROAD        164 STREET   \n","\n","                 OFF STREET NAME  ...   CONTRIBUTING FACTOR VEHICLE 2  \\\n","0                            NaN  ...                     Unspecified   \n","1                            NaN  ...                             NaN   \n","2                            NaN  ...                     Unspecified   \n","3        1211      LORING AVENUE  ...                             NaN   \n","4                            NaN  ...                             NaN   \n","...                          ...  ...                             ...   \n","2018958                      NaN  ...                     Unspecified   \n","2018959                      NaN  ...                             NaN   \n","2018960                      NaN  ...                             NaN   \n","2018961                      NaN  ...  Driver Inattention/Distraction   \n","2018962                      NaN  ...                             NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 3  CONTRIBUTING FACTOR VEHICLE 4  \\\n","0                                  NaN                            NaN   \n","1                                  NaN                            NaN   \n","2                                  NaN                            NaN   \n","3                                  NaN                            NaN   \n","4                                  NaN                            NaN   \n","...                                ...                            ...   \n","2018958                            NaN                            NaN   \n","2018959                            NaN                            NaN   \n","2018960                            NaN                            NaN   \n","2018961                            NaN                            NaN   \n","2018962                            NaN                            NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 5  COLLISION_ID  \\\n","0                                  NaN       4455765   \n","1                                  NaN       4513547   \n","2                                  NaN       4541903   \n","3                                  NaN       4456314   \n","4                                  NaN       4486609   \n","...                                ...           ...   \n","2018958                            NaN       4648110   \n","2018959                            NaN       4648117   \n","2018960                            NaN       4648366   \n","2018961                            NaN       4648129   \n","2018962                            NaN       4647913   \n","\n","                         VEHICLE TYPE CODE 1  VEHICLE TYPE CODE 2  \\\n","0                                      Sedan                Sedan   \n","1                                      Sedan                  NaN   \n","2                                      Sedan        Pick-up Truck   \n","3                                      Sedan                  NaN   \n","4                                        NaN                  NaN   \n","...                                      ...                  ...   \n","2018958                                Sedan                Sedan   \n","2018959                                Sedan                  NaN   \n","2018960                                 Taxi                  NaN   \n","2018961  Station Wagon/Sport Utility Vehicle               E-Bike   \n","2018962                                Sedan                  NaN   \n","\n","         VEHICLE TYPE CODE 3 VEHICLE TYPE CODE 4 VEHICLE TYPE CODE 5  \n","0                        NaN                 NaN                 NaN  \n","1                        NaN                 NaN                 NaN  \n","2                        NaN                 NaN                 NaN  \n","3                        NaN                 NaN                 NaN  \n","4                        NaN                 NaN                 NaN  \n","...                      ...                 ...                 ...  \n","2018958                  NaN                 NaN                 NaN  \n","2018959                  NaN                 NaN                 NaN  \n","2018960                  NaN                 NaN                 NaN  \n","2018961                  NaN                 NaN                 NaN  \n","2018962                  NaN                 NaN                 NaN  \n","\n","[2018963 rows x 29 columns]>"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["df.columns"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L3vMjYVNUWFO","executionInfo":{"status":"ok","timestamp":1694812859935,"user_tz":240,"elapsed":24,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"a8262aed-7042-4445-f4cc-1ad35dfb1c6a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Index(['CRASH DATE', 'CRASH TIME', 'BOROUGH', 'ZIP CODE', 'LATITUDE',\n","       'LONGITUDE', 'LOCATION', 'ON STREET NAME', 'CROSS STREET NAME',\n","       'OFF STREET NAME', 'NUMBER OF PERSONS INJURED',\n","       'NUMBER OF PERSONS KILLED', 'NUMBER OF PEDESTRIANS INJURED',\n","       'NUMBER OF PEDESTRIANS KILLED', 'NUMBER OF CYCLIST INJURED',\n","       'NUMBER OF CYCLIST KILLED', 'NUMBER OF MOTORIST INJURED',\n","       'NUMBER OF MOTORIST KILLED', 'CONTRIBUTING FACTOR VEHICLE 1',\n","       'CONTRIBUTING FACTOR VEHICLE 2', 'CONTRIBUTING FACTOR VEHICLE 3',\n","       'CONTRIBUTING FACTOR VEHICLE 4', 'CONTRIBUTING FACTOR VEHICLE 5',\n","       'COLLISION_ID', 'VEHICLE TYPE CODE 1', 'VEHICLE TYPE CODE 2',\n","       'VEHICLE TYPE CODE 3', 'VEHICLE TYPE CODE 4', 'VEHICLE TYPE CODE 5'],\n","      dtype='object')"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.describe"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6DboUv_sUbA8","executionInfo":{"status":"ok","timestamp":1694812860673,"user_tz":240,"elapsed":754,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"b000e52c-9631-484a-fc2c-56335900ff49"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method NDFrame.describe of          CRASH DATE CRASH TIME    BOROUGH ZIP CODE   LATITUDE  LONGITUDE  \\\n","0        09/11/2021       2:39        NaN      NaN        NaN        NaN   \n","1        03/26/2022      11:45        NaN      NaN        NaN        NaN   \n","2        06/29/2022       6:55        NaN      NaN        NaN        NaN   \n","3        09/11/2021       9:35   BROOKLYN  11208.0  40.667202 -73.866500   \n","4        12/14/2021       8:13   BROOKLYN  11233.0  40.683304 -73.917274   \n","...             ...        ...        ...      ...        ...        ...   \n","2018958  07/03/2023      18:05        NaN      NaN  40.866806 -73.931010   \n","2018959  07/22/2023      21:39      BRONX  10457.0  40.844177 -73.902920   \n","2018960  07/02/2023      17:55  MANHATTAN  10006.0  40.711033 -74.014540   \n","2018961  07/22/2023      13:15     QUEENS  11433.0  40.691580 -73.793190   \n","2018962  07/22/2023       3:00     QUEENS  11433.0  40.700240 -73.792854   \n","\n","                        LOCATION           ON STREET NAME CROSS STREET NAME  \\\n","0                            NaN    WHITESTONE EXPRESSWAY         20 AVENUE   \n","1                            NaN  QUEENSBORO BRIDGE UPPER               NaN   \n","2                            NaN       THROGS NECK BRIDGE               NaN   \n","3          (40.667202, -73.8665)                      NaN               NaN   \n","4        (40.683304, -73.917274)          SARATOGA AVENUE    DECATUR STREET   \n","...                          ...                      ...               ...   \n","2018958   (40.866806, -73.93101)          RIVERSIDE DRIVE               NaN   \n","2018959   (40.844177, -73.90292)          EAST 174 STREET    WEBSTER AVENUE   \n","2018960   (40.711033, -74.01454)              WEST STREET    LIBERTY STREET   \n","2018961    (40.69158, -73.79319)               110 AVENUE        157 STREET   \n","2018962   (40.70024, -73.792854)               SOUTH ROAD        164 STREET   \n","\n","                 OFF STREET NAME  ...   CONTRIBUTING FACTOR VEHICLE 2  \\\n","0                            NaN  ...                     Unspecified   \n","1                            NaN  ...                             NaN   \n","2                            NaN  ...                     Unspecified   \n","3        1211      LORING AVENUE  ...                             NaN   \n","4                            NaN  ...                             NaN   \n","...                          ...  ...                             ...   \n","2018958                      NaN  ...                     Unspecified   \n","2018959                      NaN  ...                             NaN   \n","2018960                      NaN  ...                             NaN   \n","2018961                      NaN  ...  Driver Inattention/Distraction   \n","2018962                      NaN  ...                             NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 3  CONTRIBUTING FACTOR VEHICLE 4  \\\n","0                                  NaN                            NaN   \n","1                                  NaN                            NaN   \n","2                                  NaN                            NaN   \n","3                                  NaN                            NaN   \n","4                                  NaN                            NaN   \n","...                                ...                            ...   \n","2018958                            NaN                            NaN   \n","2018959                            NaN                            NaN   \n","2018960                            NaN                            NaN   \n","2018961                            NaN                            NaN   \n","2018962                            NaN                            NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 5  COLLISION_ID  \\\n","0                                  NaN       4455765   \n","1                                  NaN       4513547   \n","2                                  NaN       4541903   \n","3                                  NaN       4456314   \n","4                                  NaN       4486609   \n","...                                ...           ...   \n","2018958                            NaN       4648110   \n","2018959                            NaN       4648117   \n","2018960                            NaN       4648366   \n","2018961                            NaN       4648129   \n","2018962                            NaN       4647913   \n","\n","                         VEHICLE TYPE CODE 1  VEHICLE TYPE CODE 2  \\\n","0                                      Sedan                Sedan   \n","1                                      Sedan                  NaN   \n","2                                      Sedan        Pick-up Truck   \n","3                                      Sedan                  NaN   \n","4                                        NaN                  NaN   \n","...                                      ...                  ...   \n","2018958                                Sedan                Sedan   \n","2018959                                Sedan                  NaN   \n","2018960                                 Taxi                  NaN   \n","2018961  Station Wagon/Sport Utility Vehicle               E-Bike   \n","2018962                                Sedan                  NaN   \n","\n","         VEHICLE TYPE CODE 3 VEHICLE TYPE CODE 4 VEHICLE TYPE CODE 5  \n","0                        NaN                 NaN                 NaN  \n","1                        NaN                 NaN                 NaN  \n","2                        NaN                 NaN                 NaN  \n","3                        NaN                 NaN                 NaN  \n","4                        NaN                 NaN                 NaN  \n","...                      ...                 ...                 ...  \n","2018958                  NaN                 NaN                 NaN  \n","2018959                  NaN                 NaN                 NaN  \n","2018960                  NaN                 NaN                 NaN  \n","2018961                  NaN                 NaN                 NaN  \n","2018962                  NaN                 NaN                 NaN  \n","\n","[2018963 rows x 29 columns]>"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["df.info"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RK-ZVMNIUj3L","executionInfo":{"status":"ok","timestamp":1694812861503,"user_tz":240,"elapsed":844,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"c0fe29db-95dd-418c-827a-2f47270f8f7a"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<bound method DataFrame.info of          CRASH DATE CRASH TIME    BOROUGH ZIP CODE   LATITUDE  LONGITUDE  \\\n","0        09/11/2021       2:39        NaN      NaN        NaN        NaN   \n","1        03/26/2022      11:45        NaN      NaN        NaN        NaN   \n","2        06/29/2022       6:55        NaN      NaN        NaN        NaN   \n","3        09/11/2021       9:35   BROOKLYN  11208.0  40.667202 -73.866500   \n","4        12/14/2021       8:13   BROOKLYN  11233.0  40.683304 -73.917274   \n","...             ...        ...        ...      ...        ...        ...   \n","2018958  07/03/2023      18:05        NaN      NaN  40.866806 -73.931010   \n","2018959  07/22/2023      21:39      BRONX  10457.0  40.844177 -73.902920   \n","2018960  07/02/2023      17:55  MANHATTAN  10006.0  40.711033 -74.014540   \n","2018961  07/22/2023      13:15     QUEENS  11433.0  40.691580 -73.793190   \n","2018962  07/22/2023       3:00     QUEENS  11433.0  40.700240 -73.792854   \n","\n","                        LOCATION           ON STREET NAME CROSS STREET NAME  \\\n","0                            NaN    WHITESTONE EXPRESSWAY         20 AVENUE   \n","1                            NaN  QUEENSBORO BRIDGE UPPER               NaN   \n","2                            NaN       THROGS NECK BRIDGE               NaN   \n","3          (40.667202, -73.8665)                      NaN               NaN   \n","4        (40.683304, -73.917274)          SARATOGA AVENUE    DECATUR STREET   \n","...                          ...                      ...               ...   \n","2018958   (40.866806, -73.93101)          RIVERSIDE DRIVE               NaN   \n","2018959   (40.844177, -73.90292)          EAST 174 STREET    WEBSTER AVENUE   \n","2018960   (40.711033, -74.01454)              WEST STREET    LIBERTY STREET   \n","2018961    (40.69158, -73.79319)               110 AVENUE        157 STREET   \n","2018962   (40.70024, -73.792854)               SOUTH ROAD        164 STREET   \n","\n","                 OFF STREET NAME  ...   CONTRIBUTING FACTOR VEHICLE 2  \\\n","0                            NaN  ...                     Unspecified   \n","1                            NaN  ...                             NaN   \n","2                            NaN  ...                     Unspecified   \n","3        1211      LORING AVENUE  ...                             NaN   \n","4                            NaN  ...                             NaN   \n","...                          ...  ...                             ...   \n","2018958                      NaN  ...                     Unspecified   \n","2018959                      NaN  ...                             NaN   \n","2018960                      NaN  ...                             NaN   \n","2018961                      NaN  ...  Driver Inattention/Distraction   \n","2018962                      NaN  ...                             NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 3  CONTRIBUTING FACTOR VEHICLE 4  \\\n","0                                  NaN                            NaN   \n","1                                  NaN                            NaN   \n","2                                  NaN                            NaN   \n","3                                  NaN                            NaN   \n","4                                  NaN                            NaN   \n","...                                ...                            ...   \n","2018958                            NaN                            NaN   \n","2018959                            NaN                            NaN   \n","2018960                            NaN                            NaN   \n","2018961                            NaN                            NaN   \n","2018962                            NaN                            NaN   \n","\n","         CONTRIBUTING FACTOR VEHICLE 5  COLLISION_ID  \\\n","0                                  NaN       4455765   \n","1                                  NaN       4513547   \n","2                                  NaN       4541903   \n","3                                  NaN       4456314   \n","4                                  NaN       4486609   \n","...                                ...           ...   \n","2018958                            NaN       4648110   \n","2018959                            NaN       4648117   \n","2018960                            NaN       4648366   \n","2018961                            NaN       4648129   \n","2018962                            NaN       4647913   \n","\n","                         VEHICLE TYPE CODE 1  VEHICLE TYPE CODE 2  \\\n","0                                      Sedan                Sedan   \n","1                                      Sedan                  NaN   \n","2                                      Sedan        Pick-up Truck   \n","3                                      Sedan                  NaN   \n","4                                        NaN                  NaN   \n","...                                      ...                  ...   \n","2018958                                Sedan                Sedan   \n","2018959                                Sedan                  NaN   \n","2018960                                 Taxi                  NaN   \n","2018961  Station Wagon/Sport Utility Vehicle               E-Bike   \n","2018962                                Sedan                  NaN   \n","\n","         VEHICLE TYPE CODE 3 VEHICLE TYPE CODE 4 VEHICLE TYPE CODE 5  \n","0                        NaN                 NaN                 NaN  \n","1                        NaN                 NaN                 NaN  \n","2                        NaN                 NaN                 NaN  \n","3                        NaN                 NaN                 NaN  \n","4                        NaN                 NaN                 NaN  \n","...                      ...                 ...                 ...  \n","2018958                  NaN                 NaN                 NaN  \n","2018959                  NaN                 NaN                 NaN  \n","2018960                  NaN                 NaN                 NaN  \n","2018961                  NaN                 NaN                 NaN  \n","2018962                  NaN                 NaN                 NaN  \n","\n","[2018963 rows x 29 columns]>"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["df['BOROUGH'].describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DqAvVSMY8WDj","executionInfo":{"status":"ok","timestamp":1694812861756,"user_tz":240,"elapsed":274,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"9fbe4fa7-b13d-43a0-ae8d-29bc19e22ef3"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["count      1390896\n","unique           5\n","top       BROOKLYN\n","freq        441215\n","Name: BOROUGH, dtype: object"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"id":"Iljs5sCXXqHK","colab":{"base_uri":"https://localhost:8080/","height":354},"executionInfo":{"status":"ok","timestamp":1694812862658,"user_tz":240,"elapsed":922,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"a96b1006-5b9e-401b-b1f8-538c55622a29"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           LATITUDE     LONGITUDE  NUMBER OF PERSONS INJURED  \\\n","count  1.789236e+06  1.789236e+06               2.018945e+06   \n","mean   4.062778e+01 -7.375230e+01               3.025417e-01   \n","std    1.980761e+00  3.727273e+00               6.939179e-01   \n","min    0.000000e+00 -2.013600e+02               0.000000e+00   \n","25%    4.066792e+01 -7.397493e+01               0.000000e+00   \n","50%    4.072102e+01 -7.392732e+01               0.000000e+00   \n","75%    4.076956e+01 -7.386665e+01               0.000000e+00   \n","max    4.334444e+01  0.000000e+00               4.300000e+01   \n","\n","       NUMBER OF PERSONS KILLED  NUMBER OF PEDESTRIANS INJURED  \\\n","count              2.018932e+06                   2.018963e+06   \n","mean               1.447795e-03                   5.519467e-02   \n","std                4.008954e-02                   2.413614e-01   \n","min                0.000000e+00                   0.000000e+00   \n","25%                0.000000e+00                   0.000000e+00   \n","50%                0.000000e+00                   0.000000e+00   \n","75%                0.000000e+00                   0.000000e+00   \n","max                8.000000e+00                   2.700000e+01   \n","\n","       NUMBER OF PEDESTRIANS KILLED  NUMBER OF CYCLIST INJURED  \\\n","count                  2.018963e+06               2.018963e+06   \n","mean                   7.251247e-04               2.614411e-02   \n","std                    2.741069e-02               1.614861e-01   \n","min                    0.000000e+00               0.000000e+00   \n","25%                    0.000000e+00               0.000000e+00   \n","50%                    0.000000e+00               0.000000e+00   \n","75%                    0.000000e+00               0.000000e+00   \n","max                    6.000000e+00               4.000000e+00   \n","\n","       NUMBER OF CYCLIST KILLED  NUMBER OF MOTORIST INJURED  \\\n","count              2.018963e+06                2.018963e+06   \n","mean               1.119387e-04                2.180679e-01   \n","std                1.062623e-02                6.550812e-01   \n","min                0.000000e+00                0.000000e+00   \n","25%                0.000000e+00                0.000000e+00   \n","50%                0.000000e+00                0.000000e+00   \n","75%                0.000000e+00                0.000000e+00   \n","max                2.000000e+00                4.300000e+01   \n","\n","       NUMBER OF MOTORIST KILLED  COLLISION_ID  \n","count               2.018963e+06  2.018963e+06  \n","mean                5.913927e-04  3.117002e+06  \n","std                 2.651381e-02  1.504009e+06  \n","min                 0.000000e+00  2.200000e+01  \n","25%                 0.000000e+00  3.140860e+06  \n","50%                 0.000000e+00  3.645705e+06  \n","75%                 0.000000e+00  4.150694e+06  \n","max                 5.000000e+00  4.655786e+06  "],"text/html":["\n","  <div id=\"df-57cc3604-3111-4238-83d9-343ce32f13d8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>LATITUDE</th>\n","      <th>LONGITUDE</th>\n","      <th>NUMBER OF PERSONS INJURED</th>\n","      <th>NUMBER OF PERSONS KILLED</th>\n","      <th>NUMBER OF PEDESTRIANS INJURED</th>\n","      <th>NUMBER OF PEDESTRIANS KILLED</th>\n","      <th>NUMBER OF CYCLIST INJURED</th>\n","      <th>NUMBER OF CYCLIST KILLED</th>\n","      <th>NUMBER OF MOTORIST INJURED</th>\n","      <th>NUMBER OF MOTORIST KILLED</th>\n","      <th>COLLISION_ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1.789236e+06</td>\n","      <td>1.789236e+06</td>\n","      <td>2.018945e+06</td>\n","      <td>2.018932e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","      <td>2.018963e+06</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>4.062778e+01</td>\n","      <td>-7.375230e+01</td>\n","      <td>3.025417e-01</td>\n","      <td>1.447795e-03</td>\n","      <td>5.519467e-02</td>\n","      <td>7.251247e-04</td>\n","      <td>2.614411e-02</td>\n","      <td>1.119387e-04</td>\n","      <td>2.180679e-01</td>\n","      <td>5.913927e-04</td>\n","      <td>3.117002e+06</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.980761e+00</td>\n","      <td>3.727273e+00</td>\n","      <td>6.939179e-01</td>\n","      <td>4.008954e-02</td>\n","      <td>2.413614e-01</td>\n","      <td>2.741069e-02</td>\n","      <td>1.614861e-01</td>\n","      <td>1.062623e-02</td>\n","      <td>6.550812e-01</td>\n","      <td>2.651381e-02</td>\n","      <td>1.504009e+06</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000e+00</td>\n","      <td>-2.013600e+02</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>2.200000e+01</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>4.066792e+01</td>\n","      <td>-7.397493e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>3.140860e+06</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>4.072102e+01</td>\n","      <td>-7.392732e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>3.645705e+06</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>4.076956e+01</td>\n","      <td>-7.386665e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>0.000000e+00</td>\n","      <td>4.150694e+06</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>4.334444e+01</td>\n","      <td>0.000000e+00</td>\n","      <td>4.300000e+01</td>\n","      <td>8.000000e+00</td>\n","      <td>2.700000e+01</td>\n","      <td>6.000000e+00</td>\n","      <td>4.000000e+00</td>\n","      <td>2.000000e+00</td>\n","      <td>4.300000e+01</td>\n","      <td>5.000000e+00</td>\n","      <td>4.655786e+06</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-57cc3604-3111-4238-83d9-343ce32f13d8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-57cc3604-3111-4238-83d9-343ce32f13d8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-57cc3604-3111-4238-83d9-343ce32f13d8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9638c558-ceb7-41fa-9c4b-b7e168732216\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9638c558-ceb7-41fa-9c4b-b7e168732216')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9638c558-ceb7-41fa-9c4b-b7e168732216 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df[[\"BOROUGH\", \"ZIP CODE\", \"NUMBER OF PEDESTRIANS INJURED\"]]\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":423},"id":"Fquf2MPK8MM0","executionInfo":{"status":"ok","timestamp":1694812862665,"user_tz":240,"elapsed":54,"user":{"displayName":"Cynthia Amador","userId":"11555861717763368692"}},"outputId":"deb0eefe-60b9-41a8-83a1-c4fe12935e66"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           BOROUGH ZIP CODE  NUMBER OF PEDESTRIANS INJURED\n","0              NaN      NaN                              0\n","1              NaN      NaN                              0\n","2              NaN      NaN                              0\n","3         BROOKLYN  11208.0                              0\n","4         BROOKLYN  11233.0                              0\n","...            ...      ...                            ...\n","2018958        NaN      NaN                              0\n","2018959      BRONX  10457.0                              1\n","2018960  MANHATTAN  10006.0                              0\n","2018961     QUEENS  11433.0                              0\n","2018962     QUEENS  11433.0                              0\n","\n","[2018963 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-a44b6199-150f-45dc-89ad-01d6c20a2a4d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>BOROUGH</th>\n","      <th>ZIP CODE</th>\n","      <th>NUMBER OF PEDESTRIANS INJURED</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>BROOKLYN</td>\n","      <td>11208.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>BROOKLYN</td>\n","      <td>11233.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2018958</th>\n","      <td>NaN</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2018959</th>\n","      <td>BRONX</td>\n","      <td>10457.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2018960</th>\n","      <td>MANHATTAN</td>\n","      <td>10006.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2018961</th>\n","      <td>QUEENS</td>\n","      <td>11433.0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>2018962</th>\n","      <td>QUEENS</td>\n","      <td>11433.0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2018963 rows × 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a44b6199-150f-45dc-89ad-01d6c20a2a4d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-a44b6199-150f-45dc-89ad-01d6c20a2a4d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-a44b6199-150f-45dc-89ad-01d6c20a2a4d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cbd79a9d-d528-41b2-bdfe-978ab35a41eb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cbd79a9d-d528-41b2-bdfe-978ab35a41eb')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cbd79a9d-d528-41b2-bdfe-978ab35a41eb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":[],"metadata":{"id":"47AwDD0L9500"},"execution_count":null,"outputs":[]}]}